(function(){"use strict";class M{canvas;ctx;constructor(){this.canvas=document.createElement("canvas"),this.ctx=this.canvas.getContext("2d")}async deskewImage(s){const n=s instanceof ImageData?s:this.imageToImageData(s),a=await this.calculateSkewAngle(n);return Math.abs(a)>.5?{imageData:this.rotateImage(n,-a),angle:a}:{imageData:n,angle:0}}calculateSkewAngle(s){const n=[],a=this.detectAngleByMinAreaRect(s);n.push(...a);const t=this.detectAngleByBaseline(s);n.push(...t);const e=this.detectAngleByHoughLines(s);return n.push(...e),this.calculateConsensusAngle(n,-20,20)}calculateConsensusAngle(s,n,a){const t=s.filter(g=>g.angle>=n&&g.angle<=a);if(t.length===0)return 0;const e=t.map(g=>g.angle).sort((g,f)=>g-f);if(e.length<4){const g=t.reduce((f,x)=>f+x.confidence,0);return t.reduce((f,x)=>f+x.angle*x.confidence,0)/g}const i=Math.floor(e.length*.25),o=Math.floor(e.length*.75),c=e[i],r=e[o],h=r-c,l=c-1.5*h,u=r+1.5*h,d=t.filter(g=>g.angle>=l&&g.angle<=u);if(d.length===0){const g=Math.floor(e.length/2);return e[g]}const m=d.reduce((g,f)=>g+f.confidence,0);return d.reduce((g,f)=>g+f.angle*f.confidence,0)/m}detectAngleByMinAreaRect(s){const n=this.findTextContours(s),a=[];for(const t of n){const e=this.minAreaRect(t);if(!e)continue;const i=this.normalizeAngle(e.angle),o=e.width*e.height,c=Math.max(e.width,e.height)/Math.min(e.width,e.height);if(c>.2&&c<10&&o>100){const r=Math.min(o/1e4,1)*(1/(1+Math.abs(c-3)));a.push({angle:i,confidence:r,method:"minAreaRect"})}}return a}detectAngleByBaseline(s){const n=this.findTextContours(s),a=[];for(const t of n){if(t.length<20)continue;const e=Math.floor(t.length/3),i=[t.slice(0,e),t.slice(e,2*e),t.slice(2*e)];for(const o of i){const c=this.fitLine(o);if(c){const r=this.normalizeAngle(Math.atan2(c.dy,c.dx)*180/Math.PI),h=c.confidence*(o.length/t.length);a.push({angle:r,confidence:h,method:"baseline"})}}}return a}detectAngleByHoughLines(s){const n=this.morphologicalClose(s),a=this.detectEdges(n),t=40,e=.5,i=1,o=50,c=this.houghLinesP(a,t,e,i,o),r=[];for(const h of c){const l=this.normalizeAngle(Math.atan2(h.y2-h.y1,h.x2-h.x1)*180/Math.PI),u=Math.sqrt(Math.pow(h.x2-h.x1,2)+Math.pow(h.y2-h.y1,2)),d=Math.min(u/200,1)*h.votes/o;r.push({angle:l,confidence:d,method:"houghLine"})}return r}detectEdges(s){const{width:n,height:a,data:t}=s,e=new Uint8ClampedArray(t.length);for(let i=1;i<a-1;i++)for(let o=1;o<n-1;o++){const c=(i*n+o)*4,r=((i-1)*n+(o-1))*4,h=((i-1)*n+o)*4,l=((i-1)*n+(o+1))*4,u=(i*n+(o-1))*4,d=(i*n+(o+1))*4,m=((i+1)*n+(o-1))*4,g=((i+1)*n+o)*4,f=((i+1)*n+(o+1))*4,x=-1*t[r]+1*t[l]+-2*t[u]+2*t[d]+-1*t[m]+1*t[f],w=-1*t[r]-2*t[h]-1*t[l]+1*t[m]+2*t[g]+1*t[f],A=Math.sqrt(x*x+w*w);e[c]=e[c+1]=e[c+2]=Math.min(255,A),e[c+3]=255}return e}rotateImage(s,n){const{width:a,height:t}=s,e=n*Math.PI/180,i=Math.abs(Math.cos(e)),o=Math.abs(Math.sin(e)),c=Math.ceil(a*i+t*o),r=Math.ceil(a*o+t*i);this.canvas.width=c,this.canvas.height=r;const h=document.createElement("canvas"),l=h.getContext("2d");return h.width=a,h.height=t,l.putImageData(s,0,0),this.ctx.save(),this.ctx.fillStyle="white",this.ctx.fillRect(0,0,c,r),this.ctx.translate(c/2,r/2),this.ctx.rotate(e),this.ctx.drawImage(h,-a/2,-t/2),this.ctx.restore(),this.ctx.getImageData(0,0,c,r)}imageToImageData(s){return this.canvas.width=s.width,this.canvas.height=s.height,this.ctx.drawImage(s,0,0),this.ctx.getImageData(0,0,s.width,s.height)}findTextContours(s){const n=this.binarize(s),{width:a,height:t}=s,e=new Uint8Array(a*t),i=[];for(let o=0;o<t;o++)for(let c=0;c<a;c++){const r=o*a+c;if(n[r]&&!e[r]){const h=this.traceContour(n,e,c,o,a,t);h.length>10&&i.push(h)}}return i}binarize(s){const{width:n,height:a,data:t}=s,e=new Uint8Array(n*a),i=128;for(let o=0;o<n*a;o++){const c=o*4,r=(t[c]+t[c+1]+t[c+2])/3;e[o]=r<i?1:0}return e}traceContour(s,n,a,t,e,i){const o=[],c=[{x:a,y:t}];for(;c.length>0;){const{x:r,y:h}=c.pop(),l=h*e+r;if(!(r<0||r>=e||h<0||h>=i||n[l]||!s[l])){n[l]=1,o.push({x:r,y:h});for(let u=-1;u<=1;u++)for(let d=-1;d<=1;d++)(d!==0||u!==0)&&c.push({x:r+d,y:h+u})}}return o}minAreaRect(s){if(s.length<3)return null;let n=1/0,a=1/0,t=-1/0,e=-1/0;for(const m of s)n=Math.min(n,m.x),a=Math.min(a,m.y),t=Math.max(t,m.x),e=Math.max(e,m.y);const i=t-n,o=e-a,c=(n+t)/2,r=(a+e)/2;let h=0,l=0,u=0;for(const m of s){const g=m.x-c,f=m.y-r;h+=g*g,l+=g*f,u+=f*f}const d=Math.atan2(2*l,h-u)/2*180/Math.PI;return{width:i,height:o,angle:d}}fitLine(s){if(s.length<2)return null;let n=0,a=0,t=0,e=0;for(const d of s)n+=d.x,a+=d.y,t+=d.x*d.x,e+=d.x*d.y;const i=s.length,o=i*t-n*n;if(Math.abs(o)<1e-10)return null;const c=(i*e-n*a)/o,r=a/i;let h=0,l=0;for(const d of s){const m=c*d.x+(a-c*n)/i;h+=Math.pow(d.y-m,2),l+=Math.pow(d.y-r,2)}const u=l>0?1-h/l:0;return{dx:1,dy:c,confidence:u}}morphologicalClose(s){const n=this.dilate(s);return this.erode(n)}dilate(s){const{width:n,height:a,data:t}=s,e=new Uint8ClampedArray(t);for(let i=1;i<a-1;i++)for(let o=1;o<n-1;o++){const c=(i*n+o)*4;let r=0;for(let h=-1;h<=1;h++)for(let l=-1;l<=1;l++){const u=((i+h)*n+(o+l))*4;r=Math.max(r,t[u])}e[c]=e[c+1]=e[c+2]=r}return new ImageData(e,n,a)}erode(s){const{width:n,height:a,data:t}=s,e=new Uint8ClampedArray(t);for(let i=1;i<a-1;i++)for(let o=1;o<n-1;o++){const c=(i*n+o)*4;let r=255;for(let h=-1;h<=1;h++)for(let l=-1;l<=1;l++){const u=((i+h)*n+(o+l))*4;r=Math.min(r,t[u])}e[c]=e[c+1]=e[c+2]=r}return new ImageData(e,n,a)}houghLinesP(s,n,a,t,e){return[]}normalizeAngle(s){for(;s>180;)s-=360;for(;s<-180;)s+=360;return s>90&&(s-=180),s<-90&&(s+=180),s}}const p=new M;self.addEventListener("message",async y=>{const{type:s,data:n}=y.data;switch(s){case"PROCESS":try{const{imageData:a,width:t,height:e}=n,i=new ImageData(new Uint8ClampedArray(a),t,e),o=await p.deskewImage(i),c=o.imageData.data.buffer;self.postMessage({type:"RESULT",data:{imageData:c,width:o.imageData.width,height:o.imageData.height,angle:o.angle}},[c])}catch(a){self.postMessage({type:"ERROR",error:a.message})}break}})})();
