(function(){"use strict";class p{canvas;ctx;constructor(){if(typeof OffscreenCanvas<"u")this.canvas=new OffscreenCanvas(1,1),this.ctx=this.canvas.getContext("2d");else if(typeof document<"u")this.canvas=document.createElement("canvas"),this.ctx=this.canvas.getContext("2d");else throw new Error("Neither OffscreenCanvas nor document is available")}async deskewImage(s){const n=s instanceof ImageData?s:this.imageToImageData(s),a=await this.calculateSkewAngle(n);return Math.abs(a)>.5?{imageData:this.rotateImage(n,-a),angle:a}:{imageData:n,angle:0}}calculateSkewAngle(s){const n=[],a=this.detectAngleByMinAreaRect(s);n.push(...a);const t=this.detectAngleByBaseline(s);n.push(...t);const e=this.detectAngleByHoughLines(s);return n.push(...e),this.calculateConsensusAngle(n,-20,20)}calculateConsensusAngle(s,n,a){const t=s.filter(g=>g.angle>=n&&g.angle<=a);if(t.length===0)return 0;const e=t.map(g=>g.angle).sort((g,u)=>g-u);if(e.length<4){const g=t.reduce((u,x)=>u+x.confidence,0);return t.reduce((u,x)=>u+x.angle*x.confidence,0)/g}const i=Math.floor(e.length*.25),o=Math.floor(e.length*.75),c=e[i],h=e[o],r=h-c,l=c-1.5*r,f=h+1.5*r,d=t.filter(g=>g.angle>=l&&g.angle<=f);if(d.length===0){const g=Math.floor(e.length/2);return e[g]}const m=d.reduce((g,u)=>g+u.confidence,0);return d.reduce((g,u)=>g+u.angle*u.confidence,0)/m}detectAngleByMinAreaRect(s){const n=this.findTextContours(s),a=[];for(const t of n){const e=this.minAreaRect(t);if(!e)continue;const i=this.normalizeAngle(e.angle),o=e.width*e.height,c=Math.max(e.width,e.height)/Math.min(e.width,e.height);if(c>.2&&c<10&&o>100){const h=Math.min(o/1e4,1)*(1/(1+Math.abs(c-3)));a.push({angle:i,confidence:h,method:"minAreaRect"})}}return a}detectAngleByBaseline(s){const n=this.findTextContours(s),a=[];for(const t of n){if(t.length<20)continue;const e=Math.floor(t.length/3),i=[t.slice(0,e),t.slice(e,2*e),t.slice(2*e)];for(const o of i){const c=this.fitLine(o);if(c){const h=this.normalizeAngle(Math.atan2(c.dy,c.dx)*180/Math.PI),r=c.confidence*(o.length/t.length);a.push({angle:h,confidence:r,method:"baseline"})}}}return a}detectAngleByHoughLines(s){const n=this.morphologicalClose(s),a=this.detectEdges(n),t=40,e=.5,i=1,o=50,c=this.houghLinesP(a,t,e,i,o),h=[];for(const r of c){const l=this.normalizeAngle(Math.atan2(r.y2-r.y1,r.x2-r.x1)*180/Math.PI),f=Math.sqrt(Math.pow(r.x2-r.x1,2)+Math.pow(r.y2-r.y1,2)),d=Math.min(f/200,1)*r.votes/o;h.push({angle:l,confidence:d,method:"houghLine"})}return h}detectEdges(s){const{width:n,height:a,data:t}=s,e=new Uint8ClampedArray(t.length);for(let i=1;i<a-1;i++)for(let o=1;o<n-1;o++){const c=(i*n+o)*4,h=((i-1)*n+(o-1))*4,r=((i-1)*n+o)*4,l=((i-1)*n+(o+1))*4,f=(i*n+(o-1))*4,d=(i*n+(o+1))*4,m=((i+1)*n+(o-1))*4,g=((i+1)*n+o)*4,u=((i+1)*n+(o+1))*4,x=-1*t[h]+1*t[l]+-2*t[f]+2*t[d]+-1*t[m]+1*t[u],w=-1*t[h]-2*t[r]-1*t[l]+1*t[m]+2*t[g]+1*t[u],A=Math.sqrt(x*x+w*w);e[c]=e[c+1]=e[c+2]=Math.min(255,A),e[c+3]=255}return e}rotateImage(s,n){const{width:a,height:t}=s,e=n*Math.PI/180,i=Math.abs(Math.cos(e)),o=Math.abs(Math.sin(e)),c=Math.ceil(a*i+t*o),h=Math.ceil(a*o+t*i);this.canvas.width=c,this.canvas.height=h;let r,l;return typeof OffscreenCanvas<"u"?(r=new OffscreenCanvas(a,t),l=r.getContext("2d")):(r=document.createElement("canvas"),r.width=a,r.height=t,l=r.getContext("2d")),l.putImageData(s,0,0),this.ctx.save(),this.ctx.fillStyle="white",this.ctx.fillRect(0,0,c,h),this.ctx.translate(c/2,h/2),this.ctx.rotate(e),this.ctx.drawImage(r,-a/2,-t/2),this.ctx.restore(),this.ctx.getImageData(0,0,c,h)}imageToImageData(s){return this.canvas.width=s.width,this.canvas.height=s.height,this.ctx.drawImage(s,0,0),this.ctx.getImageData(0,0,s.width,s.height)}findTextContours(s){const n=this.binarize(s),{width:a,height:t}=s,e=new Uint8Array(a*t),i=[];for(let o=0;o<t;o++)for(let c=0;c<a;c++){const h=o*a+c;if(n[h]&&!e[h]){const r=this.traceContour(n,e,c,o,a,t);r.length>10&&i.push(r)}}return i}binarize(s){const{width:n,height:a,data:t}=s,e=new Uint8Array(n*a),i=128;for(let o=0;o<n*a;o++){const c=o*4,h=(t[c]+t[c+1]+t[c+2])/3;e[o]=h<i?1:0}return e}traceContour(s,n,a,t,e,i){const o=[],c=[{x:a,y:t}];for(;c.length>0;){const{x:h,y:r}=c.pop(),l=r*e+h;if(!(h<0||h>=e||r<0||r>=i||n[l]||!s[l])){n[l]=1,o.push({x:h,y:r});for(let f=-1;f<=1;f++)for(let d=-1;d<=1;d++)(d!==0||f!==0)&&c.push({x:h+d,y:r+f})}}return o}minAreaRect(s){if(s.length<3)return null;let n=1/0,a=1/0,t=-1/0,e=-1/0;for(const m of s)n=Math.min(n,m.x),a=Math.min(a,m.y),t=Math.max(t,m.x),e=Math.max(e,m.y);const i=t-n,o=e-a,c=(n+t)/2,h=(a+e)/2;let r=0,l=0,f=0;for(const m of s){const g=m.x-c,u=m.y-h;r+=g*g,l+=g*u,f+=u*u}const d=Math.atan2(2*l,r-f)/2*180/Math.PI;return{width:i,height:o,angle:d}}fitLine(s){if(s.length<2)return null;let n=0,a=0,t=0,e=0;for(const d of s)n+=d.x,a+=d.y,t+=d.x*d.x,e+=d.x*d.y;const i=s.length,o=i*t-n*n;if(Math.abs(o)<1e-10)return null;const c=(i*e-n*a)/o,h=a/i;let r=0,l=0;for(const d of s){const m=c*d.x+(a-c*n)/i;r+=Math.pow(d.y-m,2),l+=Math.pow(d.y-h,2)}const f=l>0?1-r/l:0;return{dx:1,dy:c,confidence:f}}morphologicalClose(s){const n=this.dilate(s);return this.erode(n)}dilate(s){const{width:n,height:a,data:t}=s,e=new Uint8ClampedArray(t);for(let i=1;i<a-1;i++)for(let o=1;o<n-1;o++){const c=(i*n+o)*4;let h=0;for(let r=-1;r<=1;r++)for(let l=-1;l<=1;l++){const f=((i+r)*n+(o+l))*4;h=Math.max(h,t[f])}e[c]=e[c+1]=e[c+2]=h}return new ImageData(e,n,a)}erode(s){const{width:n,height:a,data:t}=s,e=new Uint8ClampedArray(t);for(let i=1;i<a-1;i++)for(let o=1;o<n-1;o++){const c=(i*n+o)*4;let h=255;for(let r=-1;r<=1;r++)for(let l=-1;l<=1;l++){const f=((i+r)*n+(o+l))*4;h=Math.min(h,t[f])}e[c]=e[c+1]=e[c+2]=h}return new ImageData(e,n,a)}houghLinesP(s,n,a,t,e){return[]}normalizeAngle(s){for(;s>180;)s-=360;for(;s<-180;)s+=360;return s>90&&(s-=180),s<-90&&(s+=180),s}}const M=new p;self.addEventListener("message",async y=>{const{type:s,data:n}=y.data;switch(s){case"PROCESS":try{const{imageData:a,width:t,height:e}=n,i=new ImageData(new Uint8ClampedArray(a),t,e),o=await M.deskewImage(i),c=o.imageData.data.buffer;self.postMessage({type:"RESULT",data:{imageData:c,width:o.imageData.width,height:o.imageData.height,angle:o.angle}},[c])}catch(a){self.postMessage({type:"ERROR",error:a.message})}break}})})();
